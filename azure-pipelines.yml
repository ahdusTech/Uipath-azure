trigger:
- master

variables:
- group: UiPath

stages:
- stage: Build
  displayName: Build Package
  jobs:
  - job: BuildPackage
    pool: Azure-UIP
    steps:
    - task: UiPathPack@3
      inputs:
        versionType: 'AutoVersion'
        projectJsonPath: '$(Build.SourcesDirectory)\project.json'
        orchestratorConnection: 'zohan-lab'
        outputPath: '$(Build.ArtifactStagingDirectory)\Output'

- stage: Assest
  displayName: Create Assests
  jobs:
  - job: CreateAssests
    pool: Azure-UIP
    steps:
    - task: UiPathAssets@3
      inputs:
        orchestratorConnection: 'zohan-lab'
        folderName: 'Shared'
        assetActionType: 'Deploy'
        csvFile: '$(Build.SourcesDirectory)\Data\Assets.csv'

- stage: DeployDEV
  displayName: Deploy build artifact to DEV
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: deployDEV
    displayName: Deploy package to DEV Orchestrator
    pool: Azure-UIP
    environment: DEV
    strategy:
      runOnce:
        deploy:
          steps:
          - task: UiPathPack@3
            inputs:
              versionType: 'AutoVersion'
              projectJsonPath: '$(Build.SourcesDirectory)\project.json'
              outputPath: '$(Build.ArtifactStagingDirectory)\Output'
          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)'
              ArtifactName: 'drop'
              publishLocation: 'Container'



- stage: TestDEV
  displayName: Test After Publish
  dependsOn: Build
  condition: succeeded()
  jobs:
  - job: TestDEV
    pool:
      name: Azure-UIP
    steps:
    - task: DotNetCoreCLI@2
      displayName: Aggression Tests
      inputs:
        command: 'test'
        projects: '**/*AggressionTests.csproj'
        arguments: '--configuration Release --logger trx --filter Category=Aggression'
        workingDirectory: '$(System.DefaultWorkingDirectory)'
        publishTestResults: true
        testResultsFiles: '**/*.trx'
