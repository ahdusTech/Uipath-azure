trigger:
- master

variables:
  - group: UiPath

stages:
- stage: Build
  displayName: Build Package
  jobs:
  - job: BuildPackage
    pool:
      name: Azure-UIP
    steps:
    - task: UiPathPack@3
      inputs:
        versionType: 'AutoVersion'
        projectJsonPath: '$(Build.SourcesDirectory)/project.json'
        outputType: 'Process'
        orchestratorConnection: 'Azure-Uipath'
        outputPath: '$(Build.ArtifactStagingDirectory)/Output'
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'
    - task: UiPathDeploy@3
      inputs:
        orchestratorConnection: 'Azure-UIpath'
        packagesPath: '$(Build.ArtifactStagingDirectory)/Output'
        folderName: 'Shared'
        environments: 'DEV'
        
- stage: Asset
  displayName: Create Assets
  jobs:
  - job: CreateAssets
    pool:
      name: Azure-UIP
    steps:
    - task: UiPathAssets@3
      inputs:
        orchestratorConnection: 'Azure-Uipath'
        folderName: 'Shared'
        assetActionType: 'Deploy'
        csvFile: '$(Build.SourcesDirectory)/Data/Assets.csv'

- stage: TestDEV
  displayName: Test After Publish
  dependsOn: Build
  condition: succeeded()
  jobs:
  - job: TestDEV
    pool:
      name: Azure-UIP
    steps:
    - task: PublishTestResults@2
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: '**/TEST-*.xml'
      displayName: 'Publish Test Results'
      continueOnError: true
    - task: VSTest@2
      inputs:
        testSelector: 'testAssemblies'
        testAssemblyVer2: |
          **\*test*.dll
          !**\*TestAdapter.dll
          !**\obj\**
        searchFolder: '$(System.DefaultWorkingDirectory)'
      displayName: 'Run Unit Tests'
      continueOnError: true
      
- stage: TestPlan
  displayName: Run Test Plan
  dependsOn: TestDEV
  condition: succeeded()
  jobs:
  - job: RunTestPlan
    pool:
      name: Azure-UIP
    steps:
    - task: PublishTestResults@2
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: '**/TEST-*.xml'
      displayName: 'Publish Test Results'
    - task: VisualStudioTestTaskV1@2
      inputs:
        testSelector: 'testPlan'
        testPlan: 'MyTestPlan'
        configuration: 'Release'
        pathtoCustomTestAdapters: '$(Build.SourcesDirectory)/packages'
        overrideTestrunParameters: '-TestEnv "DEV"'
        testRunTitle: 'Test Run'
        codeCoverageEnabled: true
        runInParallel: true
      displayName: 'Run Test Plan'
      continueOnError: true
