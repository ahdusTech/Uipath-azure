trigger:
- main

pool:
  name: Azure-UIP

variables:
  group: UiPath
  devOrchestrator: 'https://dev.uipath.com/'
  tstOrchestrator: 'https://tst.uipath.com/'
  prdOrchestrator: 'https://prd.uipath.com/'

stages:
- stage: Build
  displayName: 'Create build artifact'
  jobs:
  - job: BuildArtifact
    steps:
    - task: UiPathPack@3
      inputs:
        versionType: 'AutoVersion'
        projectJsonPath: '$(Build.SourcesDirectory)/project.json'
        outputType: 'Process'
        orchestratorConnection: 'Azure-Uipath'
        outputPath: '$(Build.ArtifactStagingDirectory)'
    - task: PublishBuildArtifacts@1
      inputs:
       PathtoPublish: '$(Build.ArtifactStagingDirectory)'
       ArtifactName: 'drop'
       publishLocation: 'Container'

- stage: Asset
  displayName: 'Create assets'
  jobs:
  - job: CreateAssets
    steps:
    - task: UiPathAssets@3
      inputs:
        orchestratorConnection: '$(Azure-Uipath)'
        folderName: 'Shared'
        assetActionType: 'Deploy'
        csvFile: '$(Build.SourcesDirectory)/Data/Assets.csv'

- stage: DeployDEV
  displayName: Deploy build artifact to DEV
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: deployDEV
    displayName: Deploy package to DEV Orchestrator
    pool: Azure-UIP
    environment: DEV
    strategy:
      runOnce:
        deploy:
          steps:
          - task: UiPathDeploy@3
            inputs:
              orchestratorConnection: 'Azure-UIpath'
              packagesPath: '$(Pipeline.Workspace)\drop'
              folderName: 'Shared'

