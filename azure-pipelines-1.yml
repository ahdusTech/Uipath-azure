trigger:
- main

stages:
- stage: Build
  displayName: Build Package
  jobs:
  - job: BuildPackage
    pool:
      name: Azure-UIP
    timeoutInMinutes: 60
    steps:
    - task: UiPathPack@3
      inputs:
        versionType: 'AutoVersion'
        projectJsonPath: '$(Build.SourcesDirectory)/project.json'
        orchestratorConnection: 'Azure-UIpath'
        outputPath: '$(Build.ArtifactStagingDirectory)/Output'
  
- stage: Assest
  displayName: Create Assests
  jobs:
  - job: CreateAssests
    pool: Azure-UIP
    steps:
    - task: UiPathAssets@3
      inputs:
        orchestratorConnection: 'Azure-UIpath'
        folderName: 'Shared'
        assetActionType: 'Deploy'
        csvFile: '$(Build.SourcesDirectory)/Data/Assests.csv'

- stage: DeployDEV
  displayName: Deploy build artifact to DEV
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: deployDEV
    displayName: Deploy package to DEV Orchestrator
    pool: Azure-UIP
    environment: 
      name: 'dev'
      resourceType: 'VirtualMachine'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: UiPathDeploy@3
            inputs:
              orchestratorConnection: 'Azure-UIpath'
              packagesPath: '$(Pipeline.Workspace)/drop/'
              folderName: 'Shared'

- stage: CodeQuality
  displayName: Check Code Analysis
  dependsOn: Build
  condition: succeeded()
  jobs:
  - job: CodeQuality
    pool: Azure-UIP

- stage: TestDEV
  displayName: Test After Publish
  dependsOn: DeployDEV
  condition: succeeded()
  jobs:
  - job: TestDEV
    pool: Azure-UIP
    steps:
    - task: UiPathTest@3
      inputs:
        testTarget: 'TestSet'
        orchestratorConnection: 'Azure-UIpath'
        testSet: 'UiPathAzureDevOps_Tests'
        folderName: 'Shared'
        testReportDestination: '$(Pipeline.Workspace)/drop/'
