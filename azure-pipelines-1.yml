trigger:
- master

variables:
  - group: UiPath

stages:
- stage: Build
  displayName: Build Package
  jobs:
  - job: BuildPackage
    pool:
      name: Azure-UIP
    steps:
    - task: UiPathPack@3
      inputs:
        versionType: 'AutoVersion'
        projectJsonPath: '$(Build.SourcesDirectory)/project.json'
        outputType: 'Process'
        orchestratorConnection: 'Azure-Uipath'
        outputPath: '$(Build.ArtifactStagingDirectory)/Output'
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'
    - task: UiPathDeploy@3
      inputs:
        orchestratorConnection: 'Azure-UIpath'
        packagesPath: '$(Build.ArtifactStagingDirectory)/Output'
        folderName: 'Shared'
        environments: 'DEV'
        
- stage: Asset
  displayName: Create Assets
  jobs:
  - job: CreateAssets
    pool:
      name: Azure-UIP
    steps:
    - task: UiPathAssets@3
      inputs:
        orchestratorConnection: 'Azure-Uipath'
        folderName: 'Shared'
        assetActionType: 'Deploy'
        csvFile: '$(Build.SourcesDirectory)/Data/Assets.csv'

- stage: TestDEV
  displayName: Test After Publish
  dependsOn: Build
  condition: succeeded()
  jobs:
  - job: TestDEV
    pool:
      name: Azure-UIP
    steps:
    - task: UiPathTest@3
      inputs:
        testTarget: 'TestProject'
        orchestratorConnection: 'Azure-UIpath'
        folderName: 'Shared'

- stage: RegressionTest
  displayName: Regression Tests
  dependsOn: Build
  condition: succeeded()
  jobs:
  - job: RunRegressionTests
    pool:
      name: Azure-UIP
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '14.x'
      displayName: 'Install Node.js'
    - script: |
        npm install
        npm run test
      displayName: 'Run Unit Tests'
  - job: RunTestPlan
    displayName: 'Run Test Plan'
    pool:
      name: Azure-UIP
    dependsOn: TestDEV
    steps:
    - task: DownloadBuildArtifacts@0
      inputs:
        buildType: 'current'
        downloadType: 'single'
        artifactName: 'drop'
        downloadPath: '$(System.ArtifactsDirectory)/drop'
    
